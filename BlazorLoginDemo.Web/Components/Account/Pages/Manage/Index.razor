@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Forms
@using BlazorLoginDemo.Web.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Profile</PageTitle>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-8 col-xl-6">

            <div class="card shadow-sm">
                <div class="card-header">
                    <h4 class="mb-0">Profile</h4>
                </div>

                <div class="card-body">
                    <StatusMessage />

                    <EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger" role="alert" />

                        <div class="form-floating mb-3">
                            <input type="text"
                                   value="@username"
                                   id="username"
                                   class="form-control"
                                   placeholder="Choose your username."
                                   disabled />
                            <label for="username" class="form-label">Username</label>
                        </div>

                        <div class="form-floating mb-3">
                            <InputText @bind-Value="Input.PhoneNumber"
                                       id="Input.PhoneNumber"
                                       class="form-control"
                                       placeholder="Enter your phone number" />
                            <label for="Input.PhoneNumber" class="form-label">Phone number</label>
                            <ValidationMessage For="@(() => Input.PhoneNumber)" class="text-danger" />
                        </div>

                        <button type="submit" class="btn btn-primary w-100">Save changes</button>
                    </EditForm>
                </div>

                <div class="card-footer text-muted small">
                    Signed in as <strong>@username</strong>
                </div>
            </div>

            <div class="d-flex justify-content-between mt-3">
                <a class="btn btn-outline-secondary" href="/">Back to home</a>
                <a class="btn btn-outline-primary" href="/Account/Manage/ChangePassword">Change password</a>
            </div>

        </div>
    </div>
</div>

@code {
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);
        phoneNumber = await UserManager.GetPhoneNumberAsync(user);

        Input.PhoneNumber ??= phoneNumber;
    }

    private async Task OnValidSubmitAsync()
    {
        if (Input.PhoneNumber != phoneNumber)
        {
            var setPhoneResult = await UserManager.SetPhoneNumberAsync(user, Input.PhoneNumber);
            if (!setPhoneResult.Succeeded)
            {
                RedirectManager.RedirectToCurrentPageWithStatus("Error: Failed to set phone number.", HttpContext);
                return;
            }
        }

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus("Your profile has been updated", HttpContext);
    }

    private sealed class InputModel
    {
        [Phone]
        [Display(Name = "Phone number")]
        public string? PhoneNumber { get; set; }
    }
}
