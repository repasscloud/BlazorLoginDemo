@page "/Account/Manage/Disable2fa"

@using Microsoft.AspNetCore.Identity
@using BlazorLoginDemo.Web.Data

@inject UserManager<ApplicationUser> UserManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<Disable2fa> Logger

<PageTitle>Disable two-factor authentication (2FA)</PageTitle>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-8 col-xl-6">

            <div class="card shadow-sm border-warning">
                <div class="card-header">
                    <h4 class="mb-0">Disable two‑factor authentication (2FA)</h4>
                </div>

                <div class="card-body">
                    <StatusMessage />

                    <div class="alert alert-warning" role="alert">
                        <p class="mb-2"><strong>This action only disables 2FA.</strong></p>
                        <p class="mb-0">
                            Disabling 2FA does not change the keys used in authenticator apps. If you wish to change the key
                            used in an authenticator app, you should
                            <a href="/Account/Manage/ResetAuthenticator">reset your authenticator keys</a>.
                        </p>
                    </div>

                    <form @formname="disable-2fa" @onsubmit="OnSubmitAsync" method="post" class="d-grid">
                        <AntiforgeryToken />
                        <button class="btn btn-danger" type="submit">Disable 2FA</button>
                    </form>
                </div>

                <div class="card-footer d-flex justify-content-between">
                    <a class="btn btn-outline-secondary btn-sm" href="/Account/Manage/TwoFactorAuthentication">Back to 2FA settings</a>
                    <a class="btn btn-outline-primary btn-sm" href="/">Home</a>
                </div>
            </div>

        </div>
    </div>
</div>

@code {
    private ApplicationUser user = default!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);

        if (HttpMethods.IsGet(HttpContext.Request.Method) && !await UserManager.GetTwoFactorEnabledAsync(user))
        {
            throw new InvalidOperationException("Cannot disable 2FA for user as it's not currently enabled.");
        }
    }

    private async Task OnSubmitAsync()
    {
        var disable2faResult = await UserManager.SetTwoFactorEnabledAsync(user, false);
        if (!disable2faResult.Succeeded)
        {
            throw new InvalidOperationException("Unexpected error occurred disabling 2FA.");
        }

        var userId = await UserManager.GetUserIdAsync(user);
        Logger.LogInformation("User with ID '{UserId}' has disabled 2fa.", userId);

        RedirectManager.RedirectToWithStatus(
            "Account/Manage/TwoFactorAuthentication",
            "2FA has been disabled. You can re‑enable it by setting up an authenticator app again.",
            HttpContext
        );
    }
}
