@page "/admin/avausers/resync"
@rendermode InteractiveServer

@inject BlazorLoginDemo.Shared.Services.Interfaces.User.IAvaUserService AvaUserService

<PageTitle>Manual User Resync</PageTitle>

<h1 class="display-6 mb-3">Manual User Resync</h1>

<div class="row row-cols-1 row-cols-md-3 g-3 mb-4">
    <div class="col">
        <div class="card shadow-sm h-100">
            <div class="card-body text-center">
                <h5 class="card-title">Resync Users</h5>
                <p class="card-text">Syncs all users from the default table.</p>
                <button class="btn btn-primary" @onclick="StartIngest" disabled="@_busy">
                    <i class="bi bi-person-down me-1"></i> @(_busy ? "Ingesting…" : "Start Ingest")
                </button>
            </div>
        </div>
    </div>
    <!-- Copy & paste this block for each new sync type -->
    <div class="col">
        <div class="card shadow-sm h-100">
            <div class="card-body text-center">
                <h5 class="card-title">Resync Clients</h5>
                <p class="card-text">Syncs client data into application tables.</p>
                <button class="btn btn-primary">Run Sync</button>
            </div>
        </div>
    </div>
</div>

@if (_busy)
{
    <div class="alert alert-info">
        Ingest in progress… please wait.
    </div>
}

@if (_finished)
{
    <div class="alert alert-success">
        @_resultsCount results were ingested.
    </div>
}




@code {
    private bool _busy;
    private bool _finished;
    private int _resultsCount;

    private async Task StartIngest()
    {
        _busy = true;
        _finished = false;
        _resultsCount = 0;

        try
        {
            // TODO: Replace with your ingest function
            await Task.Delay(2000); // simulate work
            _resultsCount = await AvaUserService.IngestUsersAsync();
        }
        finally
        {
            _busy = false;
            _finished = true;
        }
    }
}
