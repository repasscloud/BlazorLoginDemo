@page "/admin/clients"
@rendermode InteractiveServer

@inject NavigationManager Nav
@inject BlazorLoginDemo.Shared.Services.Interfaces.Client.IAvaClientService AvaClientService
@inject ILogger<AvaClient> Log

<PageTitle>Clients</PageTitle>

<div class="container py-4">

  <div class="card shadow-sm">
    <div class="card-header">Find a client</div>
    <div class="card-body">
      @* <h5 class="card-title mb-3">Find a client</h5> *@

      <form @onsubmit="HandleSearchAsync">
        <div class="input-group">
          <input
            class="form-control"
            placeholder="Search by name, ID, or keyword…"
            aria-label="Client search"
            @bind="_query"
            @bind:event="oninput"
            autocomplete="off" />

          <button class="btn btn-primary" type="submit" disabled="@_busy">
            @(_busy ? "Searching…" : "Search")
          </button>
        </div>
      </form>

      @if (_noResults && !_busy)
      {
        <div class="alert alert-warning d-flex align-items-center gap-2 mt-3 mb-0" role="alert">
          <i class="bi bi-info-circle"></i>
          <span>No results found</span>
        </div>
      }
    </div>
  </div>
</div>

@code {
    private string _query = string.Empty;
    private bool _busy;
    private bool _noResults;

    // Adjust this to wherever your client details live
    private const string ClientDetailsBaseUrl = "/admin/clients/";

    private async Task HandleSearchAsync()
    {
        if (string.IsNullOrWhiteSpace(_query))
        {
            _noResults = true;
            return;
        }

        try
        {
            _busy = true;
            _noResults = false;

            var clients = await AvaClientService.SearchClientAsync(_query);
            var id = clients[0].Id;

            if (!string.IsNullOrWhiteSpace(id))
            {
                var target = $"{ClientDetailsBaseUrl}{Uri.EscapeDataString(id)}";
                Nav.NavigateTo(target, forceLoad: true);
            }
            else
            {
                _noResults = true;
            }
        }
        finally
        {
            _busy = false;
        }
    }
}
