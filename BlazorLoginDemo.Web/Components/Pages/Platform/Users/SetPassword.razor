@page "/platform/users/setpassword"
@rendermode InteractiveServer
@attribute [Authorize(Policy = AppPolicies.PlatformPolicy.AdminArea)]

@using BlazorLoginDemo.Shared.Auth
@using BlazorLoginDemo.Shared.Services.Interfaces.Platform
@inject IAdminUserServiceUnified UserSvc

<h3>Set User Password</h3>

@if (!string.IsNullOrEmpty(StatusMessage))
{
    <div class="alert @StatusCss">@StatusMessage</div>
}

<div class="card">
    <div class="card-body">
        <div class="mb-3">
            <label class="form-label">Email</label>
            <input @bind="Email" class="form-control" />
        </div>
        <div class="mb-3">
            <label class="form-label">New Password</label>
            <input @bind="Password" type="password" class="form-control" />
        </div>
        <button class="btn btn-primary" @onclick="OnSetPassword">Set Password</button>
    </div>
</div>

@code {
    private string Email = "";
    private string Password = "";
    private string? StatusMessage;
    private string StatusCss = "";

    private async Task OnSetPassword()
    {
        var result = await UserSvc.SetPasswordAsync(Email, Password);
        if (result.Ok)
        {
            StatusMessage = $"Password updated for {Email}.";
            StatusCss = "alert-success";
        }
        else
        {
            StatusMessage = result.Error ?? "Unknown error";
            StatusCss = "alert-danger";
        }
    }
}
