@page "/platform/licenses/{LicenseId}/license/edit"
@rendermode InteractiveServer

@using System.ComponentModel.DataAnnotations
@using System.Security.Claims
@using System.Reflection
@using BlazorLoginDemo.Shared.Models.Kernel.Billing
@using BlazorLoginDemo.Shared.Models.Kernel.Platform
@using BlazorLoginDemo.Shared.Models.Static.Billing
@using BlazorLoginDemo.Shared.Services.Interfaces.Platform

@inject IAdminLicenseAgreementServiceUnified LicenseService
@inject NavigationManager Nav
@inject AuthenticationStateProvider Auth

@if (loading)
{
    <div class="alert alert-info mb-3">Loading…</div>
}
else if (error is not null)
{
    <div class="alert alert-danger mb-3">@error</div>
}
else if (model is not null)
{
    <EditForm Model="model" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="d-flex align-items-center justify-content-between mb-3">
            <h2>Edit License Agreement</h2>
            <div class="btn-group">
                <button class="btn btn-outline-secondary" type="button" @onclick="Cancel" disabled="@saving">Cancel</button>
                <button type="submit" class="btn btn-primary" disabled="@saving">
                    @if (saving)
                    {
                        <span class="spinner-border spinner-border-sm me-2"></span>
                    }
                    Save
                </button>
            </div>
        </div>

        <div class="card mb-3">
            <div class="card-header py-2 d-flex align-items-center justify-content-between">
                <strong>Core</strong>
                @switch(model.PaymentStatus)
                {
                    case PaymentStatus.Pending:
                        <button type="button" class="btn btn-secondary btn-sm">
                            <i class="bi-hourglass-split me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.Processing:
                        <button type="button" class="btn btn-info btn-sm">
                            <i class="bi-arrow-repeat me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.Authorized:
                        <button type="button" class="btn btn-primary btn-sm">
                            <i class="bi-shield-check me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.PartiallyPaid:
                        <button type="button" class="btn btn-warning btn-sm text-dark">
                            <i class="bi-cash-coin me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.Paid:
                        <button type="button" class="btn btn-success btn-sm">
                            <i class="bi-check-circle me-1"></i> Paid
                        </button>
                        break;

                    case PaymentStatus.Failed:
                        <button type="button" class="btn btn-danger btn-sm">
                            <i class="bi-x-circle me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.Overdue:
                        <button type="button" class="btn btn-warning btn-sm text-dark">
                            <i class="bi-exclamation-triangle me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.Disputed:
                        <button type="button" class="btn btn-danger btn-sm">
                            <i class="bi-exclamation-octagon me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.Refunded:
                        <button type="button" class="btn btn-info btn-sm">
                            <i class="bi-arrow-counterclockwise me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.PartiallyRefunded:
                        <button type="button" class="btn btn-info btn-sm">
                            <i class="bi-arrow-left-right me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.Cancelled:
                        <button type="button" class="btn btn-secondary btn-sm">
                            <i class="bi-slash-circle me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.WrittenOff:
                        <button type="button" class="btn btn-secondary btn-sm">
                            <i class="bi-journal-x me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.Chargeback:
                        <button type="button" class="btn btn-danger btn-sm">
                            <i class="bi-bank me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.Voided:
                        <button type="button" class="btn btn-secondary btn-sm">
                            <i class="bi-ban me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.Scheduled:
                        <button type="button" class="btn btn-primary btn-sm">
                            <i class="bi-calendar-event me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    case PaymentStatus.OnHold:
                        <button type="button" class="btn btn-warning btn-sm text-dark">
                            <i class="bi-pause-circle me-1"></i> @DisplayName(model.PaymentStatus)
                        </button>
                        break;

                    default:
                        <button type="button" class="btn btn-outline-dark btn-sm">
                        <i class="bi bi-question-octagon"></i> Unknown
                        </button>
                        break;
                }
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-4">
                        <label class="form-label">Start Date</label>
                        <InputDate TValue="DateOnly" class="form-control" @bind-Value="model.StartDate" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Expiry Date</label>
                        <InputDate TValue="DateOnly" class="form-control" @bind-Value="model.ExpiryDate" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Renewal Date</label>
                        <InputDate TValue="DateOnly?" class="form-control" @bind-Value="model.RenewalDate" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Remittance Email</label>
                        <InputText class="form-control" @bind-Value="model.RemittanceEmail" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Payment Terms</label>
                        <InputSelect TValue="PaymentTerms" class="form-select" @bind-Value="model.PaymentTerms">
                            @foreach (var v in EnumValues<PaymentTerms>())
                            {
                                <option value="@v">@DisplayName(v)</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Payment Method</label>
                        <InputSelect TValue="PaymentMethod" class="form-select" @bind-Value="model.PaymentMethod">
                            @foreach (var v in EnumValues<PaymentMethod>())
                            {
                                <option value="@v">@DisplayName(v)</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Billing Type</label>
                        <InputSelect TValue="BillingType" class="form-select" @bind-Value="model.BillingType">
                            @foreach (var v in EnumValues<BillingType>())
                            {
                                <option value="@v">@v</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Billing Frequency</label>
                        <InputSelect TValue="BillingFrequency" class="form-select" @bind-Value="model.BillingFrequency">
                            @foreach (var v in EnumValues<BillingFrequency>())
                            {
                                <option value="@v">@DisplayName(v)</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">@(model.AutoRenew ? "Auto Renew" : "Manual Renew")</label>
                        <div class="form-check form-switch mt-2">
                            <InputCheckbox class="form-check-input" @bind-Value="model.AutoRenew" />
                            <label class="form-check-label" title="@(model.AutoRenew ? "Auto Renew" : "Manual Renew")">
                                <span aria-hidden="true">@(model.AutoRenew ? " ✅" : " ❌")</span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-3">
            <div class="card-header py-2">
                <strong>Financials</strong>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label class="form-label">Access Fee</label>
                        <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.AccessFee" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Access Fee Scope</label>
                        <InputSelect TValue="LicenseAgreementUnified.BillingPeriodScope" class="form-select" @bind-Value="model.AccessFeeScope">
                            @foreach (var v in EnumValues<LicenseAgreementUnified.BillingPeriodScope>())
                            {
                                <option value="@v">@v</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Account Threshold</label>
                        <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.AccountThreshold" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Threshold Scope</label>
                        <InputSelect TValue="LicenseAgreementUnified.BillingPeriodScope" class="form-select" @bind-Value="model.ThresholdScope">
                            @foreach (var v in EnumValues<LicenseAgreementUnified.BillingPeriodScope>())
                            {
                                <option value="@v">@v</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Tax Rate</label>
                        <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.TaxRate" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Minimum Monthly Spend</label>
                        <InputNumber TValue="decimal?" class="form-control" step="0.01" @bind-Value="model.MinimumMonthlySpend" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Prepaid Balance</label>
                        <InputNumber TValue="decimal" class="form-control bg-light" step="0.01" @bind-Value="model.PrepaidBalance" readonly />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Grace Period Days</label>
                        <InputNumber TValue="int" class="form-control" @bind-Value="model.GracePeriodDays" />
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-3">
            <div class="card-header py-2">
                <strong>Discounts</strong>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-4">
                        <label class="form-label">Flat Discount Amount</label>
                        <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.DiscountA!.Amount" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Scope</label>
                        <InputSelect TValue="LicenseAgreementUnified.BillingPeriodScope" class="form-select" @bind-Value="model.DiscountA!.Scope">
                            @foreach (var v in EnumValues<LicenseAgreementUnified.BillingPeriodScope>())
                            {
                                <option value="@v">@v</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Expires (UTC)</label>
                        <InputDate TValue="DateTime?" class="form-control" @bind-Value="model.DiscountA!.ExpiresOnUtc" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Percent Discount %</label>
                        <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.DiscountB!.Percent" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Scope</label>
                        <InputSelect TValue="LicenseAgreementUnified.BillingPeriodScope" class="form-select" @bind-Value="model.DiscountB!.Scope">
                            @foreach (var v in EnumValues<LicenseAgreementUnified.BillingPeriodScope>())
                            {
                                <option value="@v">@v</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Expires (UTC)</label>
                        <InputDate TValue="DateTime?" class="form-control" @bind-Value="model.DiscountB!.ExpiresOnUtc" />
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-3">
            <div class="card-header py-2">
                <strong>PNR &amp; Service Fees</strong>
            </div>
            <div class="card-body">
                <div class="row gy-3">
                    <div class="col-12">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">PNR Creation Fee</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.PnrCreationFee" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">PNR Change Fee</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.PnrChangeFee" />
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">Flight Markup %</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.FlightMarkupPercent" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Flight Per Item Fee</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.FlightPerItemFee" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Flight Fee Type</label>
                                <InputSelect TValue="ServiceFeeType" class="form-select" @bind-Value="model.FlightFeeType">
                                    @foreach (var v in EnumValues<ServiceFeeType>())
                                    {
                                        <option value="@v">@DisplayName(v)</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">Hotel Markup %</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.HotelMarkupPercent" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Hotel Per Item Fee</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.HotelPerItemFee" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Hotel Fee Type</label>
                                <InputSelect TValue="ServiceFeeType" class="form-select" @bind-Value="model.HotelFeeType">
                                    @foreach (var v in EnumValues<ServiceFeeType>())
                                    {
                                        <option value="@v">@DisplayName(v)</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">Car Markup %</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.CarMarkupPercent" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Car Per Item Fee</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.CarPerItemFee" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Car Fee Type</label>
                                <InputSelect TValue="ServiceFeeType" class="form-select" @bind-Value="model.CarFeeType">
                                    @foreach (var v in EnumValues<ServiceFeeType>())
                                    {
                                        <option value="@v">@DisplayName(v)</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">Rail Markup %</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.RailMarkupPercent" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Rail Per Item Fee</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.RailPerItemFee" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Rail Fee Type</label>
                                <InputSelect TValue="ServiceFeeType" class="form-select" @bind-Value="model.RailFeeType">
                                    @foreach (var v in EnumValues<ServiceFeeType>())
                                    {
                                        <option value="@v">@DisplayName(v)</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">Transfer Markup %</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.TransferMarkupPercent" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Transfer Per Item Fee</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.TransferPerItemFee" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Transfer Fee Type</label>
                                <InputSelect TValue="ServiceFeeType" class="form-select" @bind-Value="model.TransferFeeType">
                                    @foreach (var v in EnumValues<ServiceFeeType>())
                                    {
                                        <option value="@v">@DisplayName(v)</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">Activity Markup %</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.ActivityMarkupPercent" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Activity Per Item Fee</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.ActivityPerItemFee" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Activity Fee Type</label>
                                <InputSelect TValue="ServiceFeeType" class="form-select" @bind-Value="model.ActivityFeeType">
                                    @foreach (var v in EnumValues<ServiceFeeType>())
                                    {
                                        <option value="@v">@DisplayName(v)</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">All Travel Markup %</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.TravelMarkupPercent" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">All Travel Per Item Fee</label>
                                <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.TravelPerItemFee" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">All Travel Fee Type</label>
                                <InputSelect TValue="ServiceFeeType" class="form-select" @bind-Value="model.TravelFeeType">
                                    @foreach (var v in EnumValues<ServiceFeeType>())
                                    {
                                        <option value="@v">@DisplayName(v)</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-3">
            <div class="card-header py-2">
                <strong>Late Fees</strong>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label class="form-label">Grace Period (days)</label>
                        <InputNumber TValue="int" class="form-control" @bind-Value="model.LateFees.GracePeriodDays" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Fixed Amount</label>
                        <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.LateFees.FixedAmount" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Percent Of Invoice</label>
                        <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.LateFees.PercentOfInvoice" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">@(model.LateFees.UseFixedAmount ? "Fixed Amount Used" : "Percent of Invoice Used")</label>
                        <div class="form-check form-switch mt-2">
                            <InputCheckbox class="form-check-input" @bind-Value="model.LateFees.UseFixedAmount" />
                            <label class="form-check-label" title="@(model.LateFees.UseFixedAmount ? "Fixed Amount Used" : "Percent of Invoice Used")">
                                <span aria-hidden="true">@(model.LateFees.UseFixedAmount ? " 🔗" : " 💹")</span>
                            </label>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Max Late Fee Cap</label>
                        <InputNumber TValue="decimal" class="form-control" step="0.01" @bind-Value="model.LateFees.MaxLateFeeCap" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Late Fee Terms</label>
                        <InputSelect TValue="PaymentTerms" class="form-select" @bind-Value="model.LateFees.Terms">
                            @foreach (var v in EnumValues<PaymentTerms>())
                            {
                                <option value="@v">@DisplayName(v)</option>
                            }
                        </InputSelect>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-3">
            <div class="card-header py-2">
                <strong>Capacity / Limits</strong>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label class="form-label">Client Count Limit</label>
                        <InputNumber TValue="int?" class="form-control" @bind-Value="model.ClientCountLimit" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">User Account Limit</label>
                        <InputNumber TValue="int?" class="form-control" @bind-Value="model.UserAccountLimit" />
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-3 d-flex gap-2 mb-3">
            <button class="btn btn-primary" type="submit" disabled="@saving">Save</button>
            <button class="btn btn-outline-secondary" type="button" @onclick="Cancel" disabled="@saving">Cancel</button>
        </div>
    </EditForm>
}

@code {
    [Parameter] public string LicenseId { get; set; } = default!;

    private LicenseAgreementUnified model = default!;
    private bool loading = true;
    private bool saving = false;
    private string? error;

    private static IEnumerable<TEnum> EnumValues<TEnum>() where TEnum : struct, Enum
        => Enum.GetValues<TEnum>();

    private static string DisplayName<TEnum>(TEnum value) where TEnum : struct, Enum
    {
        var mem  = typeof(TEnum).GetMember(value.ToString());
        var attr = mem.FirstOrDefault()?.GetCustomAttribute<DisplayAttribute>();
        return attr?.GetName() ?? value.ToString();
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var agg = await LicenseService.GetByIdAsync(LicenseId, CancellationToken.None);
            if (agg is null)
            {
                Nav.NavigateTo("/platform/error/license-not-found", forceLoad: true);
                return;
            }
            model = agg.License;
            model.LateFees ??= new();
            model.DiscountA ??= new();
            model.DiscountB ??= new();
        }
        catch (Exception ex)
        {
            error = ex.GetBaseException().Message;
        }
        finally
        {
            loading = false;
            StateHasChanged();
        }
    }

    private async Task HandleSubmit()
    {
        try
        {
            saving = true;
            error = null;
            model.LastUpdatedAtUtc = DateTime.UtcNow;
            var ok = await LicenseService.UpdateAsync(model, CancellationToken.None);
            if (ok)
            {
                Nav.NavigateTo(uri: $"/platform/orgs", forceLoad: true);
            }
        }
        catch (Exception ex)
        {
            error = ex.GetBaseException().Message;
        }
        finally
        {
            saving = false;
        }
    }

    private void Cancel()
    {
        Nav.NavigateTo($"/licenses/view/{LicenseId}", forceLoad: true);
    }
}
