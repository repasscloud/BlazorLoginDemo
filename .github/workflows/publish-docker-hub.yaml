name: 🐳 Auto Docker Publish

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-amd64:
    name: 🛠️ Build & Push amd64
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code (with submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: 🗂️ Set Release ID
        run: echo "RELEASE_ID=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: 🔐 Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐳 Build & Push amd64 image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --push \
            --tag repasscloud/ava-api:${{ env.RELEASE_ID }}-amd64 \
            -f Dockerfile.API .

  build-arm64:
    name: 🛠️ Build & Push arm64
    runs-on: ubuntu-24.04-arm
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🗂️ Set Release ID
        run: echo "RELEASE_ID=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: 🔐 Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐳 Build & Push arm64 image
        run: |
          docker buildx build \
            --platform linux/arm64 \
            --push \
            --tag repasscloud/ava-api:${{ env.RELEASE_ID }}-arm64 \
            -f Dockerfile.API .

  merge-manifest:
    name: 🧬 Create Multi-Arch Manifest
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: 🗂️ Set Release ID
        run: echo "RELEASE_ID=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: 🔐 Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🧪 Create and Push Manifest
        run: |
          docker buildx imagetools create \
            --tag repasscloud/ava-api:${{ env.RELEASE_ID }} \
            repasscloud/ava-api:${{ env.RELEASE_ID }}-amd64 \
            repasscloud/ava-api:${{ env.RELEASE_ID }}-arm64
  
  deploy:
    name: 🚀 Deploy
    needs: [merge-manifest]
    runs-on: ubuntu-latest
    steps:
      - name: 🔑 Start SSH agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.AVAGHUSR_SSH_KEY }}

      - name: 🚀 Run update-compose-stack.sh on remote
        run: |
          ssh -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_HOST }} \
            "/home/${{ secrets.SSH_USERNAME }}/update-compose-stack.sh"
