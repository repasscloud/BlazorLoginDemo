using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Reflection;

namespace Cinturon360.Shared.Models.Static;
public enum PassportCountry
{
    [Display(Name = "Afghanistan")] AFG,
    [Display(Name = "Albania")] ALB,
    [Display(Name = "Algeria")] DZA,
    [Display(Name = "Andorra")] AND,
    [Display(Name = "Angola")] AGO,
    [Display(Name = "Antigua and Barbuda")] ATG,
    [Display(Name = "Argentina")] ARG,
    [Display(Name = "Armenia")] ARM,
    [Display(Name = "Australia")] AUS,
    [Display(Name = "Austria")] AUT,
    [Display(Name = "Azerbaijan")] AZE,
    [Display(Name = "Bahamas")] BHS,
    [Display(Name = "Bahrain")] BHR,
    [Display(Name = "Bangladesh")] BGD,
    [Display(Name = "Barbados")] BRB,
    [Display(Name = "Belarus")] BLR,
    [Display(Name = "Belgium")] BEL,
    [Display(Name = "Belize")] BLZ,
    [Display(Name = "Benin")] BEN,
    [Display(Name = "Bhutan")] BTN,
    [Display(Name = "Bolivia")] BOL,
    [Display(Name = "Bosnia and Herzegovina")] BIH,
    [Display(Name = "Botswana")] BWA,
    [Display(Name = "Brazil")] BRA,
    [Display(Name = "Brunei Darussalam")] BRN,
    [Display(Name = "Bulgaria")] BGR,
    [Display(Name = "Burkina Faso")] BFA,
    [Display(Name = "Burundi")] BDI,
    [Display(Name = "Cabo Verde")] CPV,
    [Display(Name = "Cambodia")] KHM,
    [Display(Name = "Cameroon")] CMR,
    [Display(Name = "Canada")] CAN,
    [Display(Name = "Central African Republic")] CAF,
    [Display(Name = "Chad")] TCD,
    [Display(Name = "Chile")] CHL,
    [Display(Name = "China")] CHN,
    [Display(Name = "Colombia")] COL,
    [Display(Name = "Comoros")] COM,
    [Display(Name = "Congo")] COG,
    [Display(Name = "Congo, Democratic Republic of the")] COD,
    [Display(Name = "Costa Rica")] CRI,
    [Display(Name = "Croatia")] HRV,
    [Display(Name = "Cuba")] CUB,
    [Display(Name = "Cyprus")] CYP,
    [Display(Name = "Czechia")] CZE,
    [Display(Name = "Denmark")] DNK,
    [Display(Name = "Djibouti")] DJI,
    [Display(Name = "Dominica")] DMA,
    [Display(Name = "Dominican Republic")] DOM,
    [Display(Name = "Ecuador")] ECU,
    [Display(Name = "Egypt")] EGY,
    [Display(Name = "El Salvador")] SLV,
    [Display(Name = "Equatorial Guinea")] GNQ,
    [Display(Name = "Eritrea")] ERI,
    [Display(Name = "Estonia")] EST,
    [Display(Name = "Eswatini")] SWZ,
    [Display(Name = "Ethiopia")] ETH,
    [Display(Name = "Fiji")] FJI,
    [Display(Name = "Finland")] FIN,
    [Display(Name = "France")] FRA,
    [Display(Name = "Gabon")] GAB,
    [Display(Name = "Gambia")] GMB,
    [Display(Name = "Georgia")] GEO,
    [Display(Name = "Germany")] DEU,
    [Display(Name = "Ghana")] GHA,
    [Display(Name = "Greece")] GRC,
    [Display(Name = "Grenada")] GRD,
    [Display(Name = "Guatemala")] GTM,
    [Display(Name = "Guinea")] GIN,
    [Display(Name = "Guinea-Bissau")] GNB,
    [Display(Name = "Guyana")] GUY,
    [Display(Name = "Haiti")] HTI,
    [Display(Name = "Honduras")] HND,
    [Display(Name = "Hungary")] HUN,
    [Display(Name = "Iceland")] ISL,
    [Display(Name = "India")] IND,
    [Display(Name = "Indonesia")] IDN,
    [Display(Name = "Iran")] IRN,
    [Display(Name = "Iraq")] IRQ,
    [Display(Name = "Ireland")] IRL,
    [Display(Name = "Israel")] ISR,
    [Display(Name = "Italy")] ITA,
    [Display(Name = "Jamaica")] JAM,
    [Display(Name = "Japan")] JPN,
    [Display(Name = "Jordan")] JOR,
    [Display(Name = "Kazakhstan")] KAZ,
    [Display(Name = "Kenya")] KEN,
    [Display(Name = "Kiribati")] KIR,
    [Display(Name = "Kuwait")] KWT,
    [Display(Name = "Kyrgyzstan")] KGZ,
    [Display(Name = "Lao People's Democratic Republic")] LAO,
    [Display(Name = "Latvia")] LVA,
    [Display(Name = "Lebanon")] LBN,
    [Display(Name = "Lesotho")] LSO,
    [Display(Name = "Liberia")] LBR,
    [Display(Name = "Libya")] LBY,
    [Display(Name = "Liechtenstein")] LIE,
    [Display(Name = "Lithuania")] LTU,
    [Display(Name = "Luxembourg")] LUX,
    [Display(Name = "Madagascar")] MDG,
    [Display(Name = "Malawi")] MWI,
    [Display(Name = "Malaysia")] MYS,
    [Display(Name = "Maldives")] MDV,
    [Display(Name = "Mali")] MLI,
    [Display(Name = "Malta")] MLT,
    [Display(Name = "Marshall Islands")] MHL,
    [Display(Name = "Mauritania")] MRT,
    [Display(Name = "Mauritius")] MUS,
    [Display(Name = "Mexico")] MEX,
    [Display(Name = "Micronesia")] FSM,
    [Display(Name = "Moldova")] MDA,
    [Display(Name = "Monaco")] MCO,
    [Display(Name = "Mongolia")] MNG,
    [Display(Name = "Montenegro")] MNE,
    [Display(Name = "Morocco")] MAR,
    [Display(Name = "Mozambique")] MOZ,
    [Display(Name = "Myanmar")] MMR,
    [Display(Name = "Namibia")] NAM,
    [Display(Name = "Nauru")] NRU,
    [Display(Name = "Nepal")] NPL,
    [Display(Name = "Netherlands")] NLD,
    [Display(Name = "New Zealand")] NZL,
    [Display(Name = "Nicaragua")] NIC,
    [Display(Name = "Niger")] NER,
    [Display(Name = "Nigeria")] NGA,
    [Display(Name = "Korea, Democratic People's Republic of")] PRK,
    [Display(Name = "North Macedonia")] MKD,
    [Display(Name = "Norway")] NOR,
    [Display(Name = "Oman")] OMN,
    [Display(Name = "Pakistan")] PAK,
    [Display(Name = "Palau")] PLW,
    [Display(Name = "Panama")] PAN,
    [Display(Name = "Papua New Guinea")] PNG,
    [Display(Name = "Paraguay")] PRY,
    [Display(Name = "Peru")] PER,
    [Display(Name = "Philippines")] PHL,
    [Display(Name = "Poland")] POL,
    [Display(Name = "Portugal")] PRT,
    [Display(Name = "Qatar")] QAT,
    [Display(Name = "Romania")] ROU,
    [Display(Name = "Russian Federation")] RUS,
    [Display(Name = "Rwanda")] RWA,
    [Display(Name = "Saint Kitts and Nevis")] KNA,
    [Display(Name = "Saint Lucia")] LCA,
    [Display(Name = "Saint Vincent and the Grenadines")] VCT,
    [Display(Name = "Samoa")] WSM,
    [Display(Name = "San Marino")] SMR,
    [Display(Name = "Sao Tome and Principe")] STP,
    [Display(Name = "Saudi Arabia")] SAU,
    [Display(Name = "Senegal")] SEN,
    [Display(Name = "Serbia")] SRB,
    [Display(Name = "Seychelles")] SYC,
    [Display(Name = "Sierra Leone")] SLE,
    [Display(Name = "Singapore")] SGP,
    [Display(Name = "Slovakia")] SVK,
    [Display(Name = "Slovenia")] SVN,
    [Display(Name = "Solomon Islands")] SLB,
    [Display(Name = "Somalia")] SOM,
    [Display(Name = "South Africa")] ZAF,
    [Display(Name = "Korea, Republic of")] KOR,
    [Display(Name = "Spain")] ESP,
    [Display(Name = "Sri Lanka")] LKA,
    [Display(Name = "Sudan")] SDN,
    [Display(Name = "Suriname")] SUR,
    [Display(Name = "Sweden")] SWE,
    [Display(Name = "Switzerland")] CHE,
    [Display(Name = "Syrian Arab Republic")] SYR,
    [Display(Name = "Tajikistan")] TJK,
    [Display(Name = "Tanzania")] TZA,
    [Display(Name = "Thailand")] THA,
    [Display(Name = "Timor-Leste")] TLS,
    [Display(Name = "Togo")] TGO,
    [Display(Name = "Tonga")] TON,
    [Display(Name = "Trinidad and Tobago")] TTO,
    [Display(Name = "Tunisia")] TUN,
    [Display(Name = "TÃ¼rkiye")] TUR,
    [Display(Name = "Turkmenistan")] TKM,
    [Display(Name = "Tuvalu")] TUV,
    [Display(Name = "Uganda")] UGA,
    [Display(Name = "Ukraine")] UKR,
    [Display(Name = "United Arab Emirates")] ARE,
    [Display(Name = "United Kingdom")] GBR,
    [Display(Name = "United States of America")] USA,
    [Display(Name = "Uruguay")] URY,
    [Display(Name = "Uzbekistan")] UZB,
    [Display(Name = "Vanuatu")] VUT,
    [Display(Name = "Venezuela")] VEN,
    [Display(Name = "Viet Nam")] VNM,
    [Display(Name = "Yemen")] YEM,
    [Display(Name = "Zambia")] ZMB,
    [Display(Name = "Zimbabwe")] ZWE,
}

public static class PassportCountryExtensions
{
    private static readonly ConcurrentDictionary<PassportCountry, string> _displayCache = new();

    public static string GetDisplayName(this PassportCountry value)
    {
        return _displayCache.GetOrAdd(value, v =>
        {
            var mem = typeof(PassportCountry).GetMember(v.ToString()).FirstOrDefault();
            var display = mem?.GetCustomAttribute<DisplayAttribute>();
            return display?.GetName() ?? v.ToString();
        });
    }
}

public static class PassportCountries
{
    public static readonly (PassportCountry Code, string Name)[] All =
        Enum.GetValues<PassportCountry>()
            .Select(c => (Code: c, Name: c.GetDisplayName())) // name the tuple elements
            .OrderBy(x => x.Name)
            .ToArray();

    public static IReadOnlyDictionary<PassportCountry, string> Map { get; } =
        All.ToDictionary(x => x.Code, x => x.Name);
}
